function Devices = checkUsbDevices(Devices)
% Check if the devices are internal or not.

nDevices = length(Devices);
Devices(nDevices).internal = [];
% List the devices
fprintf('[%s]: Check USB Devices [DeviceID: Product, Manufacturer, Transport]: \n', mfilename);
for n = 1:nDevices,
    fprintf(1,'   Device %d: %s, %s, %s: ',n , Devices(n).product, Devices(n).manufacturer, Devices(n).transport);
    try
        % Define external devices in advance
        internal = 0;
        if strcmpi(Devices(n).usageName, 'slave keyboard')
            internal = 1;
        elseif strcmpi(Devices(n).usageName, 'slave pointer')
            internal = 1;
        end;

        if internal
           fprintf('Internal\n');
           Devices(n).internal = true;
        else % we assume it is an internal device
           fprintf('External\n');
           Devices(n).internal = false;
        end;       
    catch ME
        warning(ME.identifier, ME.message);
    end;
end
end
% 
% function checkUsbDevices(Devices, deviceId)
% % Want: Check input from USB-HID devices
% 
% % Initiate keyboard
% myKeyCheck;
% 
% nDevices = length(devices.keyInputInternal) + length(devices.keyInputExternal);
% 
% % Check the input from the selected device
% quitProgKey = KbName('q');
% trigProgKey = KbName('t');
% resProgKey = KbName('3#');
% checkDeviceProg = 1;
% while checkDeviceProg
%     % Select a device
%     deviceId = input(sprintf('Input Device ID (0 to %d): ', nDevices-1));
%     
%     % Get input from the device
%     disp('Press any key to test; ''q'' to quit');
%     iwait = 1;
%     while iwait % wait for the specific key set by 'triggerKey'
%         % WaitSecs(0.01); 
%         % Added by MO, 10-12-2015
%         [subKeyIsDown, ~, subKeyCode] = KbCheck(deviceId);
%         if subKeyIsDown
%             if subKeyCode(trigProgKey)
%                 disp('''t'' is down');
%             elseif subKeyCode(resProgKey)
%                 disp('''3#'' is down');
%             else
%                 keyStr = KbName(find(subKeyCode));
%                 disp(['''' keyStr '''' ' is down']);
%             end;
%         end;
%         [expKeyIsDown, ~, expKeyCode] = KbCheck(0);   % Keyboard for experimentor (Internal Keyboard)
%         if expKeyIsDown && expKeyCode(quitProgKey)
%             iwait = 0;
%         end
%     end
%     checkDeviceProg = input('Check another device? (Yes=1/No=0): ');
% end
% 
% end